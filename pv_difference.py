# -*- coding: utf-8 -*-
"""PV_Difference.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oL1xoGQe-mIZk6wNSeru0Nigz_a_0DQF

This script calculates the nearest difference between the Phased Variants in an incremental fashion.

Input : Dynamic Bins Data-set

Output : Dataset with differnce between PVs

Loading library and ignoring file warnings
"""

import pandas as pd

import warnings
warnings.filterwarnings('ignore')

"""Reading in the csv file"""

main_df = pd.read_csv('NONORM_dynamic_bins.csv')
main_df.head()

"""Creating a Dummy Dataset and sorting values by "start" column."""

dummy_df = main_df.copy()
dummy_df.sort_values('start',inplace=True,ignore_index=True)
dummy_df.head(500)[300:]

"""1. Creating a list called res.
2. Defining a function to calculate nearest distance between two PVs ater sorting that data according to chromosomes.
"""

res = []
def foo(dum):
    Chromo_col = 'chr2'
    chrList = dum[Chromo_col].value_counts().index.tolist()
    diff = []
    for i in chrList:
        q = dum[dum[Chromo_col]==i]
        q.sort_values('Start_Position',inplace = True, ignore_index=True)
        #batching(q)
        diff.clear()
        diff.append(0)
        for i in range(1,q.shape[0]-1):
            d1 = q['Start_Position'][i+1] - q['Start_Position'][i]
            d2 = q['Start_Position'][i] - q['Start_Position'][i-1]

            if(d1 < d2):
              diff.append(d1) 
            else: 
              diff.append(d2)
            #diff.append(q['Start_Position'][i+1] - q['Start_Position'][i])
        diff.append(0)
        q['PV_Diff'] = diff
        res.append(q)
    #print(q.shape[0],dum.shape[0])
        #break

"""Calling the function."""

foo(dummy_df)

len(res)

"""Concatinating differnt elements of the list res."""

dummy_pv_diff = pd.concat(res)
dummy_pv_diff.reset_index(drop=True,inplace=True)

dummy_pv_diff.head()

dummy_pv_diff['chr2'].value_counts()

filtered_df = dummy_pv_diff[dummy_pv_diff['chr2'] == 'chr2']

filtered_df.head(20)

difference_df = dummy_pv_diff['PV_Diff'].value_counts().sort_index().rename_axis('Difference').to_frame('Counts_Of_PV').reset_index()

difference_df

"""Getting all the PV distances under 1000 bps."""

fil = difference_df[difference_df['Difference'] <= 1000 ]

fil = fil[1:].reset_index(drop=True)
fil

"""Adding no. of phased variants in an incremental fashion according to distance."""

for i in range(fil.shape[0]-1):
    sum_ = fil['Counts_Of_PV'][i+1] + fil['Counts_Of_PV'][i]  
    fil['Counts_Of_PV'][i+1] = sum_

for i in range(fil.shape[0]):
    fil['Difference'][i] = 'Difference of '+ str(fil['Difference'][i])

fil

difference_df.tail()

"""Writing the dataset to csv file."""

fil.to_csv('NONORM_Difference_PV_diff_of_29aug.csv',index=False)